{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\nauthor: \"jalagon\"\noutput: \nhtml_document:\nkeep_md: true\n---\n\n\n## Loading and preprocessing the data\n\n1. Load the data (i.e. `read.csv()`)\n\nFirst, download the data from internet.\n\n```{r Download and extract data, cache=TRUE}\nURL <- \"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip\"\ndownload.file(url = URL, destfile = \"activity.zip\")\nunzip(\"activity.zip\")\n```\n\nThen, read data in R.\n\n```{r Read data}\n# Read data. I assume you have downloaded zip data and extracted *activity.csv*  to working directory.\nactivity <- read.csv(\"activity.csv\")\n```\n\n2. Process/transform the data (if necessary) into a format suitable for your analysis.  \n\nChange date variable to date format and check everything looks ok\n```{r Process data}\n# Change date variable to date format\nactivity$date<-as.Date.factor(activity$date)\n\n#Create time and dateTime variables from date and interval variables.\nhour <- as.integer(activity$interval/100)\nminute <- as.integer(round((activity$interval/100 - hour) * 100))\ntime <- strptime(paste(hour,\":\",minute, sep = \"\"), format = \"%H:%M\")\ndateTime <- strptime(paste(activity$date,\" \",hour,\":\",minute, sep = \"\"), format = \"%Y-%m-%d %H:%M\")\n\n# Explore data frame\nstr(activity)\nhead(activity)\ntail(activity)\n```\n\n\n## What is mean total number of steps taken per day?\n\n1. Calculate the total number of steps taken per day\n\n```{r Total steps per day}\nlibrary(dplyr, quietly = TRUE, warn.conflicts = FALSE)\n# Calculate total number of steps per day\nStepsPerDay <- summarise(group_by(activity, date), sum(steps))\nStepsPerDay\n\n```\n\n2. Make a histogram of the total number of steps taken each day\n```{r Histogram}\nhist(StepsPerDay$`sum(steps)`,\n     main = \"Total number of steps per day\",\n     xlab = \"Steps per day\")\n```\n\n\n3. Calculate and report the mean and median of the total number of steps taken per day\n```{r Mean and median steps per day}\n# Calculate mean and median across days, removing NA\nmean(StepsPerDay$`sum(steps)`, na.rm = TRUE)\nmedian(StepsPerDay$`sum(steps)`, na.rm = TRUE)\n```\n\n\n## What is the average daily activity pattern?\n\n1. Make a time series plot (i.e. `type = \"l\"`) of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)\n```{r Time Series}\n# Calculate Average Steps per Interval\nAverageStepsPerInterval <- summarise(group_by(activity, interval), mean(steps, na.rm = TRUE))\nplot(unique(time), AverageStepsPerInterval$`mean(steps, na.rm = TRUE)`, \n     type = \"l\",\n     main = \"Time series average steps by 5-minute interval\",\n     xlab = \"5-minute interval\",\n     ylab = \"Average Steps\")\n```\n\n2. Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?\n```{r Max steps interval , echo=FALSE}\n# Find the max and extract the interval\nx <- AverageStepsPerInterval[AverageStepsPerInterval[,2] == max(AverageStepsPerInterval[,2]),]\nmaxInt <- paste(as.integer(x[1]/100), \":\", as.integer(round((x[1]/100 - as.integer(x[1]/100)) * 100)), sep = \"\")\nmaxSteps <- round(x[2]) \n```\n\nThe interval **`r maxInt`** has the max average number of steps, which is **`r maxSteps`**.\n\n## Imputing missing values\n\n\n\n## Are there differences in activity patterns between weekdays and weekends?\n",
    "created" : 1447532525293.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2271058538",
    "id" : "6947DFCC",
    "lastKnownWriteTime" : 1447563414,
    "path" : "~/GitHub/RepData_PeerAssessment1/Assignment 1.Rmd",
    "project_path" : "Assignment 1.Rmd",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}